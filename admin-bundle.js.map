{
  "version": 3,
  "sources": ["ieeevisdb.ts", "auth.ts", "main-admin.ts"],
  "sourcesContent": ["import {AdminsData, Room, Session} from \"./session\";\n\ndeclare var firebase: Firebase;\n\nexport class IeeeVisDb {\n    private sessionRef?: FirebaseRef;\n    private roomRef?: FirebaseRef;\n    private adminsRef?: FirebaseRef;\n\n    constructor() {\n        this.initFirebase();\n    }\n\n    initFirebase() {\n        firebase.initializeApp({\n            apiKey: \"AIzaSyCfFQ-eN52od55QBFZatFImgZgEDHK_P4E\",\n            authDomain: \"ieeevis.firebaseapp.com\",\n            databaseURL: \"https://ieeevis-default-rtdb.firebaseio.com\",\n            projectId: \"ieeevis\",\n            storageBucket: \"ieeevis.appspot.com\",\n            messagingSenderId: \"542997735159\",\n            appId: \"1:542997735159:web:6d9624111ec276a61fd5f2\",\n            measurementId: \"G-SNC8VC6RFM\"\n        });\n        firebase.analytics();\n    }\n\n    loadRoom(roomId: string, onRoomUpdated: (room: Room) => void) {\n        this.roomRef = firebase.database().ref('rooms/' + roomId) as FirebaseRef;\n\n        this.roomRef.on('value', (snapshot) => {\n            onRoomUpdated(snapshot.val() as Room);\n        });\n    }\n\n    loadSession(sessionId: string, onSessionUpdated: (session: Session) => void) {\n        this.sessionRef = firebase.database().ref('sessions/' + sessionId);\n\n        this.sessionRef!.on('value', (snapshot) => {\n            onSessionUpdated(snapshot.val() as Session);\n        });\n    }\n\n    loadAdmins(callback: (adminsData: AdminsData) => void) {\n        this.adminsRef = firebase.database().ref('admins');\n\n        this.adminsRef!.on('value', (snapshot) => {\n            callback(snapshot.val() as AdminsData);\n        });\n    }\n\n    set(path: string, value: string|number|{}) {\n        this.sessionRef?.child(path).set(value);\n    }\n\n    setRoom(path: string, value: string|number) {\n        this.roomRef?.child(path).set(value);\n    }\n}\n\ninterface FirebaseRef {\n    child: (childName: string) => FirebaseRef;\n    set: (value: string|number|{}) => void;\n    on: (event: \"value\", cb: (data: any) => void) => void;\n}\n\ninterface Firebase {\n    initializeApp: (data: {\n        apiKey: string,\n        authDomain: string,\n        databaseURL: string,\n        projectId: string,\n        storageBucket: string,\n        messagingSenderId: string,\n        appId: string,\n        measurementId: string\n    }) => void;\n    analytics: () => void;\n    database: () => {\n        ref: (name: string) => FirebaseRef\n    }\n}\n", "import {Session, User} from \"./session\";\n\ndeclare var firebase: Firebase;\ndeclare var firebaseui: FirebaseUiApi;\n\nexport class IeeeVisAuth {\n    constructor(private onUser: (user?: User) => void) {\n        this.initFirebaseUi();\n        this.initUi();\n        this.trackAuthState();\n    }\n\n    initFirebaseUi() {\n        var uiConfig = {\n            signInSuccessUrl: location,\n            signInOptions: [\n                // Leave the lines as is for the providers you want to offer your users.\n                firebase.auth.GoogleAuthProvider.PROVIDER_ID,\n            ],\n            tosUrl: '',\n            // Privacy policy url/callback.\n            privacyPolicyUrl: ''\n        };\n\n        // Initialize the FirebaseUI Widget using Firebase.\n        // @ts-ignore\n        const ui = new firebaseui.auth.AuthUI(firebase.auth());\n        // The start method will wait until the DOM is loaded.\n        ui.start('#firebaseui-auth-container', uiConfig);\n    }\n\n    initUi() {\n        document.getElementById('welcome')!.style.display = 'none';\n        document.getElementById('sign-out')!.addEventListener('click', function() {\n            firebase.auth().signOut();\n        });\n    }\n\n    trackAuthState() {\n        firebase.auth().onAuthStateChanged((user?: User) => {\n            if(user) {\n                document.getElementById('welcome')!.style.display = '';\n                document.getElementById('displayName')!.innerText = user.displayName;\n                document.getElementById('firebaseui-auth-container')!.style.display = 'none';\n\n            } else {\n                document.getElementById('firebaseui-auth-container')!.style.display = '';\n                document.getElementById('welcome')!.style.display = 'none';\n                document.getElementById('displayName')!.innerText = '';\n            }\n            this.onUser(user);\n        });\n    }\n}\n\ninterface Firebase {\n    auth: FirebaseAuth;\n}\n\ninterface FirebaseAuth {\n    (): FirebaseAuthInstance;\n    GoogleAuthProvider: {\n        PROVIDER_ID: string;\n    };\n}\n\ninterface FirebaseAuthInstance {\n    signOut: () => void;\n    onAuthStateChanged: (callback: (user?: User) => void) => void;\n}\n\ninterface FirebaseUiApi {\n    auth: {\n        AuthUI: (auth: FirebaseAuthInstance) => FirebaseUi;\n    }\n}\n\ninterface FirebaseUi {\n    new(): any;\n    start: (selector: string, config: {}) => void;\n}\n", "import {AdminsData, Room, Session, User} from \"./session\";\nimport {IeeeVisDb} from \"./ieeevisdb\";\nimport {IeeeVisAuth} from \"./auth\";\n\nclass IeeeVisStreamAdmin {\n    session?: Session;\n    db: IeeeVisDb;\n    admins?: AdminsData;\n    user?: User;\n\n    constructor(private SESSION_ID: string) {\n        this.db = new IeeeVisDb();\n        this.db.loadSession(SESSION_ID, session => this.onSessionUpdated(session));\n\n        new IeeeVisAuth(this.onUserUpdated.bind(this));\n\n        document.getElementById('previous-video-button')!.onclick = this.previousVideo.bind(this);\n        document.getElementById('next-video-button')!.onclick = this.nextVideo.bind(this);\n        document.getElementById('session-to-room-button')!.onclick = this.sessionToRoom.bind(this);\n\n        setInterval(this.updateTable.bind(this), 1000);\n\n        this.db.loadAdmins(admins => {\n            this.admins = admins;\n            this.onUserUpdated(this.user);\n        });\n    }\n\n    onSessionUpdated(session: Session) {\n        this.session = session;\n\n        document.getElementById('track-title')!.innerText = this.session.name;\n        document.getElementById('room-id')!.innerText = this.session.room;\n\n        this.db.loadRoom(session.room, room => this.onRoomUpdated(session.room, room));\n    }\n\n    onRoomUpdated(roomId: string, room: Room) {\n        if(roomId != this.session?.room) {\n            // Do not listen to update events of a different room.\n            return;\n        }\n        document.getElementById('room-name')!.innerText = room.name;\n        document.getElementById('room-currentsession')!.innerText = room.currentSession;\n\n        const isLive = room.currentSession == this.SESSION_ID;\n        document.getElementById('live-session-alert')!.style.display = isLive ? 'block' : 'none';\n        document.getElementById('live-room-name')!.innerText = room.name;\n\n        document.getElementById('session-to-room-button')!.style.display = isLive ? 'none' : '';\n    }\n\n    onUserUpdated(user?: User) {\n        this.user = user;\n        document.getElementById('uid')!.innerText = this.user?.uid || '-';\n\n        if(this.user && this.admins && this.admins.hasOwnProperty(this.user.uid)) {\n            document.getElementById('access-alert')!.style.display = 'none';\n        } else {\n            document.getElementById('access-alert')!.style.display = '';\n        }\n        this.updateTable();\n    }\n\n    updateTable() {\n        if(!this.session || !this.user || !this.admins || !this.admins.hasOwnProperty(this.user.uid)) {\n            return;\n        }\n\n        const tableBody = document.getElementById('videos-table-body') as HTMLTableElement;\n        tableBody.innerHTML = '';\n\n        const currentVideoPlayedMs = new Date().getTime() - this.session.currentStatus.videoStartTimestamp;\n\n        for(const stageKey in this.session.stages) {\n            const stage = this.session.stages[stageKey];\n            const active = this.session.currentStatus.videoIndex.toString() === stageKey;\n            const isPreview = stage.state === \"PREVIEW\";\n            const timePlayed = !active ? '-' : new Date(currentVideoPlayedMs).toISOString().substr(11, 8);\n            const ytUrl = `https://www.youtube.com/watch?v=${stage.youtubeId}`;\n            const imgUrl = stage.imageUrl;\n            let duration = '';\n            const startText = !stage.time_start ? '' :\n                new Date(stage.time_start).toISOString().substr(0, 16).replace('T', ', ');\n\n            if(stage.time_start && stage.time_end) {\n                const start = new Date(stage.time_start);\n                const end = new Date(stage.time_end);\n                const durationMs = end.getTime() - start.getTime();\n                duration = new Date(durationMs).toISOString().substr(11, 8)\n            } else if(stage.live) {\n                duration = '(live)';\n            } else {\n                duration = '-';\n            }\n\n            const tr = document.createElement('tr');\n            tr.className = active ? 'active' : '';\n            tr.innerHTML = `\n                <td>` +\n                (isPreview ? `<a href=\"${imgUrl}\" target=\"_blank\">[Image] ${stage.title}</a>`\n                    : `<a href=${ytUrl}\" target=\"_blank\">${stage.title}</a>`) + `\n                </td>\n                <td>${startText}</td>\n                <td>${duration}</td>\n                <td>${timePlayed}</td>\n                <td>${stage.state}</td>`;\n\n            tableBody.append(tr);\n        }\n    }\n\n    previousVideo() {\n        this.updateVideoIndex(this.session!.currentStatus.videoIndex - 1);\n    }\n\n    nextVideo() {\n        //TODO: don't allow going past the number of vids.\n        this.updateVideoIndex(this.session!.currentStatus.videoIndex + 1);\n    }\n\n    sessionToRoom() {\n        this.db.setRoom('currentSession', this.SESSION_ID);\n    }\n\n    private updateVideoIndex(index: number) {\n        this.db.set('currentStatus', {\n            videoStartTimestamp: new Date().getTime(),\n            videoIndex: index\n        });\n        this.session!.currentStatus.videoStartTimestamp = new Date().getTime();\n        this.session!.currentStatus.videoIndex = index;\n        this.updateTable();\n    }\n}\n\nconst sessionId = location.search.indexOf('session=') === -1 ? '' :\n    location.search.substr(location.search.indexOf('session=') + 'session='.length);\n\nif(sessionId) {\n    const streamAdmin = new IeeeVisStreamAdmin(sessionId);\n    document.getElementById('wrapper')!.style.display = 'block';\n} else {\n    document.getElementById('param-error')!.style.display = 'block';\n}\n"],
  "mappings": "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",
  "names": []
}
