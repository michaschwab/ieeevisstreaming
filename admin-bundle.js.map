{
  "version": 3,
  "sources": ["ieeevisdb.ts", "auth.ts", "main-admin.ts"],
  "sourcesContent": ["import {AdminsData, Log, Room, RoomDayLogs, Session} from \"./session\";\r\n\r\ndeclare var firebase: Firebase;\r\n\r\nexport class IeeeVisDb {\r\n    private sessionRef?: FirebaseRef;\r\n    private roomRef?: FirebaseRef;\r\n    private adminsRef?: FirebaseRef;\r\n    private logsRef?: FirebaseRef;\r\n\r\n    constructor() {\r\n        this.initFirebase();\r\n    }\r\n\r\n    initFirebase() {\r\n        firebase.initializeApp({\r\n            apiKey: \"AIzaSyCfFQ-eN52od55QBFZatFImgZgEDHK_P4E\",\r\n            authDomain: \"ieeevis.firebaseapp.com\",\r\n            databaseURL: \"https://ieeevis-default-rtdb.firebaseio.com\",\r\n            projectId: \"ieeevis\",\r\n            storageBucket: \"ieeevis.appspot.com\",\r\n            messagingSenderId: \"542997735159\",\r\n            appId: \"1:542997735159:web:6d9624111ec276a61fd5f2\",\r\n            measurementId: \"G-SNC8VC6RFM\"\r\n        });\r\n        firebase.analytics();\r\n\r\n        this.logsRef = firebase.database().ref('logs/');\r\n    }\r\n\r\n    loadRoom(roomId: string, onRoomUpdated: (room: Room) => void) {\r\n        this.roomRef = firebase.database().ref('rooms/' + roomId) as FirebaseRef;\r\n\r\n        this.roomRef.on('value', (snapshot) => {\r\n            onRoomUpdated(snapshot.val() as Room);\r\n        });\r\n    }\r\n\r\n    loadSession(sessionId: string, onSessionUpdated: (session: Session) => void) {\r\n        this.sessionRef = firebase.database().ref('sessions/' + sessionId);\r\n\r\n        this.sessionRef!.on('value', (snapshot) => {\r\n            onSessionUpdated(snapshot.val() as Session);\r\n        });\r\n    }\r\n\r\n    loadAllSessions(callback: (sessionsData: {[id: string]: Session}) => void) {\r\n        const ref = firebase.database().ref('sessions/');\r\n        ref.on('value', snapshot => callback(snapshot.val()));\r\n    }\r\n\r\n    loadAdmins(callback: (adminsData: AdminsData) => void) {\r\n        this.adminsRef = firebase.database().ref('admins');\r\n\r\n        this.adminsRef!.on('value', (snapshot) => {\r\n            callback(snapshot.val() as AdminsData);\r\n        });\r\n    }\r\n\r\n    set(path: string, value: string|number|{}) {\r\n        this.sessionRef?.child(path).set(value);\r\n    }\r\n\r\n    setRoom(path: string, value: string|number) {\r\n        this.roomRef?.child(path).set(value);\r\n    }\r\n\r\n    log(log: Log) {\r\n        const date = new Date(log.time);\r\n        const month = date.getUTCMonth() + 1;\r\n        const day = date.getUTCDate();\r\n        const year = date.getUTCFullYear();\r\n        const dayString = `${year}-${month}-${day}`;\r\n\r\n        const hour = date.getUTCHours();\r\n        const minute = date.getUTCMinutes();\r\n        const second = date.getUTCSeconds();\r\n        const milli = date.getUTCMilliseconds();\r\n        const timeString = `${hour}:${minute}:${second}:${milli}`;\r\n\r\n        this.logsRef?.child(dayString).child(log.room).child(timeString).set(log);\r\n    }\r\n\r\n    loadLogs(room: string, day: string, callback: (logs: RoomDayLogs) => void) {\r\n        const logsRef = firebase.database().ref(`logs/${day}/${room}`);\r\n\r\n        logsRef!.on('value', (snapshot) => {\r\n            callback(snapshot.val() as RoomDayLogs);\r\n        });\r\n    }\r\n}\r\n\r\ninterface FirebaseRef {\r\n    child: (childName: string) => FirebaseRef;\r\n    set: (value: string|number|{}) => void;\r\n    on: (event: \"value\", cb: (data: any) => void) => void;\r\n}\r\n\r\ninterface Firebase {\r\n    initializeApp: (data: {\r\n        apiKey: string,\r\n        authDomain: string,\r\n        databaseURL: string,\r\n        projectId: string,\r\n        storageBucket: string,\r\n        messagingSenderId: string,\r\n        appId: string,\r\n        measurementId: string\r\n    }) => void;\r\n    analytics: () => void;\r\n    database: () => {\r\n        ref: (name: string) => FirebaseRef\r\n    }\r\n}\r\n", "import {Session, User} from \"./session\";\r\n\r\ndeclare var firebase: Firebase;\r\ndeclare var firebaseui: FirebaseUiApi;\r\n\r\nexport class IeeeVisAuth {\r\n    constructor(private onUser: (user?: User) => void) {\r\n        this.initFirebaseUi();\r\n        this.initUi();\r\n        this.trackAuthState();\r\n    }\r\n\r\n    initFirebaseUi() {\r\n        var uiConfig = {\r\n            signInSuccessUrl: location,\r\n            signInOptions: [\r\n                // Leave the lines as is for the providers you want to offer your users.\r\n                firebase.auth.GoogleAuthProvider.PROVIDER_ID,\r\n            ],\r\n            tosUrl: '',\r\n            // Privacy policy url/callback.\r\n            privacyPolicyUrl: ''\r\n        };\r\n\r\n        // Initialize the FirebaseUI Widget using Firebase.\r\n        // @ts-ignore\r\n        const ui = new firebaseui.auth.AuthUI(firebase.auth());\r\n        // The start method will wait until the DOM is loaded.\r\n        ui.start('#firebaseui-auth-container', uiConfig);\r\n    }\r\n\r\n    initUi() {\r\n        document.getElementById('welcome')!.style.display = 'none';\r\n        document.getElementById('sign-out')!.addEventListener('click', function() {\r\n            firebase.auth().signOut();\r\n        });\r\n    }\r\n\r\n    trackAuthState() {\r\n        firebase.auth().onAuthStateChanged((user?: User) => {\r\n            if(user) {\r\n                document.getElementById('welcome')!.style.display = '';\r\n                document.getElementById('displayName')!.innerText = user.displayName;\r\n                document.getElementById('firebaseui-auth-container')!.style.display = 'none';\r\n\r\n            } else {\r\n                document.getElementById('firebaseui-auth-container')!.style.display = '';\r\n                document.getElementById('welcome')!.style.display = 'none';\r\n                document.getElementById('displayName')!.innerText = '';\r\n            }\r\n            this.onUser(user);\r\n        });\r\n    }\r\n}\r\n\r\ninterface Firebase {\r\n    auth: FirebaseAuth;\r\n}\r\n\r\ninterface FirebaseAuth {\r\n    (): FirebaseAuthInstance;\r\n    GoogleAuthProvider: {\r\n        PROVIDER_ID: string;\r\n    };\r\n}\r\n\r\ninterface FirebaseAuthInstance {\r\n    signOut: () => void;\r\n    onAuthStateChanged: (callback: (user?: User) => void) => void;\r\n}\r\n\r\ninterface FirebaseUiApi {\r\n    auth: {\r\n        AuthUI: (auth: FirebaseAuthInstance) => FirebaseUi;\r\n    }\r\n}\r\n\r\ninterface FirebaseUi {\r\n    new(): any;\r\n    start: (selector: string, config: {}) => void;\r\n}\r\n", "import {AdminsData, Room, Session, SessionStatus, User} from \"./session\";\r\nimport {IeeeVisDb} from \"./ieeevisdb\";\r\nimport {IeeeVisAuth} from \"./auth\";\r\n\r\nclass IeeeVisStreamAdmin {\r\n    session?: Session;\r\n    db: IeeeVisDb;\r\n    admins?: AdminsData;\r\n    user?: User;\r\n    room?: Room;\r\n\r\n    constructor(private SESSION_ID: string) {\r\n        this.db = new IeeeVisDb();\r\n        this.db.loadSession(SESSION_ID, session => this.onSessionUpdated(session));\r\n\r\n        new IeeeVisAuth(this.onUserUpdated.bind(this));\r\n\r\n        document.getElementById('timezone')!.innerText = Intl.DateTimeFormat().resolvedOptions().timeZone;\r\n        document.getElementById('previous-video-button')!.onclick = this.previousVideo.bind(this);\r\n        document.getElementById('next-video-button')!.onclick = this.nextVideo.bind(this);\r\n        document.getElementById('session-to-room-button')!.onclick = this.sessionToRoom.bind(this);\r\n\r\n        setInterval(this.updateTable.bind(this), 1000);\r\n\r\n        this.db.loadAdmins(admins => {\r\n            this.admins = admins;\r\n            this.onUserUpdated(this.user);\r\n        });\r\n    }\r\n\r\n    onSessionUpdated(session: Session) {\r\n        this.session = session;\r\n\r\n        document.getElementById('track-title')!.innerText = this.session.name;\r\n        document.getElementById('room-id')!.innerText = this.session.room;\r\n        document.getElementById('session-time')!.innerText =\r\n            `${formatDate(this.session.time_start)} until ${formatDate(this.session.time_end)}`;\r\n        document.getElementById('session-chair')!.innerText = this.session.chairs || '';\r\n\r\n        this.db.loadRoom(session.room, room => this.onRoomUpdated(session.room, room));\r\n    }\r\n\r\n    onRoomUpdated(roomId: string, room: Room) {\r\n        if(roomId != this.session?.room) {\r\n            // Do not listen to update events of a different room.\r\n            return;\r\n        }\r\n        this.room = room;\r\n        Array.from(document.getElementsByClassName('room-name')).map(el => (el as HTMLElement).innerText = room.name);\r\n        document.getElementById('room-link')!.innerHTML =\r\n            `<a href=\"https://virtual.ieeevis.org/year/2021/room_${roomId}.html\" target=\"_blank\">${room.name}</a>`;\r\n        //document.getElementById('room-name')!.innerText = room.name;\r\n        document.getElementById('room-currentsession')!.innerText = room.currentSession;\r\n\r\n        const isLive = this.isLive();\r\n        document.getElementById('live-session-alert')!.style.display = isLive ? 'block' : 'none';\r\n        document.getElementById('live-room-name')!.innerText = room.name;\r\n\r\n        document.getElementById('session-to-room-button')!.style.display = isLive ? 'none' : '';\r\n    }\r\n\r\n    onUserUpdated(user?: User) {\r\n        this.user = user;\r\n        document.getElementById('uid')!.innerText = this.user?.uid || '-';\r\n\r\n        if(this.user && this.admins && this.admins.hasOwnProperty(this.user.uid)) {\r\n            document.getElementById('access-alert')!.style.display = 'none';\r\n            document.getElementById('admin-content')!.style.display = 'block';\r\n        } else {\r\n            document.getElementById('access-alert')!.style.display = '';\r\n            document.getElementById('admin-content')!.style.display = 'none';\r\n        }\r\n        this.updateTable();\r\n    }\r\n\r\n    updateTable() {\r\n        if(!this.session || !this.user || !this.admins || !this.admins.hasOwnProperty(this.user.uid)) {\r\n            return;\r\n        }\r\n\r\n        document.getElementById('zoom-url')!.innerHTML =\r\n            `<a href=\"${this.session.zoom_url}\">${this.session.zoom_url}</a>`;\r\n\r\n\r\n        document.getElementById('session-notes')!.innerText = this.session.notes;\r\n\r\n        const tableBody = document.getElementById('videos-table-body') as HTMLTableElement;\r\n        tableBody.innerHTML = '';\r\n\r\n        const currentVideoPlayedMs = new Date().getTime() - this.session.currentStatus.videoStartTimestamp;\r\n\r\n        for(const stageKey in this.session.stages) {\r\n            const stage = this.session.stages[stageKey];\r\n            const active = this.session.currentStatus.videoIndex.toString() === stageKey;\r\n            const isPreview = stage.state === \"PREVIEW\";\r\n            const timePlayed = !active ? '-' : new Date(currentVideoPlayedMs).toISOString().substr(11, 8);\r\n            const ytUrl = `https://www.youtube.com/watch?v=${stage.youtubeId}`;\r\n            const imgUrl = stage.imageUrl;\r\n            let duration = '';\r\n            const startText = !stage.time_start ? '' : formatDate(stage.time_start);\r\n\r\n            if(stage.time_start && stage.time_end) {\r\n                const start = new Date(stage.time_start);\r\n                const end = new Date(stage.time_end);\r\n                const durationMs = end.getTime() - start.getTime();\r\n                duration = new Date(durationMs).toISOString().substr(11, 8)\r\n            } else {\r\n                duration = '-';\r\n            }\r\n            if(stage.live) {\r\n                duration += ' (live)';\r\n            }\r\n\r\n            const tr = document.createElement('tr');\r\n            tr.className = active ? 'active' : '';\r\n\r\n            const slidoLabel = stage.slido_label;\r\n\r\n\r\n            tr.innerHTML = `\r\n                <td>` +\r\n                (isPreview ? `<a href=\"${imgUrl}\" target=\"_blank\">[Image] ${stage.title}</a>`\r\n                    : `<a href=\"${ytUrl}\" target=\"_blank\">${stage.title}</a>`) + `\r\n                </td>\r\n                <td>${startText}</td>\r\n                <td>${duration}</td>\r\n                <td>${timePlayed}</td>\r\n                <td>${stage.state}</td>\r\n                <td>${stage.contributors || ''}</td>\r\n                <td>${stage.notes || ''}</td>\r\n                <td class=\"slido-col\"></td>`;\r\n\r\n            if(slidoLabel) {\r\n                const slidoCopyLink = document.createElement('a');\r\n                slidoCopyLink.addEventListener('click', () => copyTextToClipboard(slidoLabel));\r\n                slidoCopyLink.innerText = slidoLabel + \" \uD83D\uDCCB\";\r\n                slidoCopyLink.className = 'slido-copy-link';\r\n                slidoCopyLink.title = `Click to copy ${slidoLabel} to your clipboard`;\r\n                tr.getElementsByClassName('slido-col')[0].appendChild(slidoCopyLink);\r\n            }\r\n\r\n            tableBody.append(tr);\r\n        }\r\n    }\r\n\r\n    previousVideo() {\r\n        this.updateVideoIndex(this.session!.currentStatus.videoIndex - 1);\r\n    }\r\n\r\n    nextVideo() {\r\n        const currentStage = this.session?.stages[this.session!.currentStatus.videoIndex];\r\n        if(currentStage?.live) {\r\n            const nextStageButton = document.getElementById('next-video-button')! as HTMLButtonElement;\r\n            nextStageButton.disabled = true;\r\n            nextStageButton.innerText = 'Switching to next stage in 3...';\r\n            setTimeout(() => nextStageButton.innerText = 'Switching to next stage in 2...', 1500);\r\n            setTimeout(() => nextStageButton.innerText = 'Switching to next stage in 1...', 2500);\r\n            setTimeout(() => {\r\n                nextStageButton.innerText = 'Next Stage';\r\n                nextStageButton.disabled = false;\r\n                this.updateVideoIndex(this.session!.currentStatus.videoIndex + 1);\r\n            }, 3500);\r\n        } else {\r\n            this.updateVideoIndex(this.session!.currentStatus.videoIndex + 1);\r\n        }\r\n    }\r\n\r\n    sessionToRoom() {\r\n        this.db.setRoom('currentSession', this.SESSION_ID);\r\n\r\n        this.db.log({\r\n            room: this.session!.room,\r\n            session: this.SESSION_ID,\r\n            status: this.session!.currentStatus,\r\n            admin: this.user?.uid!,\r\n            time: new Date().getTime(),\r\n            youtubeId: this.session?.stages[this.session?.currentStatus.videoIndex].youtubeId || '',\r\n            title: this.session?.stages[this.session?.currentStatus.videoIndex].title || '',\r\n        });\r\n    }\r\n\r\n    private async updateVideoIndex(index: number) {\r\n        if(!this.session?.stages[index]) {\r\n            return;\r\n        }\r\n        const liveStreamStartTimestamp = await this.maybeLoadLiveVideoStart(index);\r\n\r\n        const status: SessionStatus = {\r\n            videoStartTimestamp: new Date().getTime(),\r\n            videoIndex: index,\r\n            liveStreamStartTimestamp: liveStreamStartTimestamp || 0\r\n        };\r\n        this.db.set('currentStatus', status);\r\n\r\n        if(this.isLive()) {\r\n            this.db.log({\r\n                room: this.session!.room,\r\n                session: this.SESSION_ID,\r\n                status,\r\n                admin: this.user?.uid!,\r\n                time: new Date().getTime(),\r\n                youtubeId: this.session?.stages[status.videoIndex].youtubeId || '',\r\n                title: this.session?.stages[status.videoIndex].title || '',\r\n            });\r\n        }\r\n\r\n        this.session!.currentStatus.videoStartTimestamp = new Date().getTime();\r\n        this.session!.currentStatus.videoIndex = index;\r\n        this.updateTable();\r\n    }\r\n\r\n    private maybeLoadLiveVideoStart(index: number): Promise<number> {\r\n        return new Promise((resolve, reject) => {\r\n            const stage = this.session!.stages[index];\r\n\r\n            if(stage?.live) {\r\n                // Fetch live video start.\r\n                const apiKey = 'AIzaSyDxGUDBsYHoOLJf5O2kf8gKgvJjQRcVykE';\r\n                const url = `https://www.googleapis.com/youtube/v3/videos?part=liveStreamingDetails&id=${stage.youtubeId}&key=${apiKey}`;\r\n                const request = new Request(url, { method: \"GET\" });\r\n                fetch(request)\r\n                    .then(response => {\r\n                        if (response.status === 200) {\r\n                            return response.json();\r\n                        } else {\r\n                            throw new Error('Something went wrong on api server!');\r\n                        }\r\n                    })\r\n                    .then((blob: LiveStreamingDetails) => {\r\n                        //console.log('got it', blob, blob.items[0].liveStreamingDetails.actualStartTime)\r\n                        resolve((new Date(blob.items[0].liveStreamingDetails.actualStartTime)).getTime());\r\n                    })\r\n                    .catch(error => console.error(error));\r\n            } else {\r\n                resolve(0);\r\n            }\r\n        });\r\n    }\r\n\r\n    private isLive() {\r\n        return this.room?.currentSession == this.SESSION_ID;\r\n    }\r\n}\r\n\r\nfunction formatDate(time: string) {\r\n    //return new Date(time).toISOString().substr(0, 16).replace('T', ', ')\r\n    return new Date(time).toLocaleString();\r\n}\r\n\r\nconst sessionId = location.search.indexOf('session=') === -1 ? '' :\r\n    location.search.substr(location.search.indexOf('session=') + 'session='.length);\r\n\r\nif(sessionId) {\r\n    const streamAdmin = new IeeeVisStreamAdmin(sessionId);\r\n    document.getElementById('wrapper')!.style.display = 'block';\r\n} else {\r\n    document.getElementById('param-error')!.style.display = 'block';\r\n}\r\n\r\ninterface LiveStreamingDetails {\r\n    \"kind\": string;\r\n    \"etag\": string;\r\n    \"items\": {\r\n        \"kind\": string,\r\n        \"etag\": string,\r\n        \"id\": string,\r\n        \"liveStreamingDetails\": {\r\n            \"actualStartTime\": string,\r\n            \"scheduledStartTime\": string,\r\n            \"activeLiveChatId\": string\r\n        }\r\n    }[],\r\n    \"pageInfo\": {\r\n        \"totalResults\": number,\r\n        \"resultsPerPage\": number\r\n    }\r\n}\r\n\r\nfunction fallbackCopyTextToClipboard(text: string) {\r\n    var textArea = document.createElement(\"textarea\");\r\n    textArea.value = text;\r\n\r\n    // Avoid scrolling to bottom\r\n    textArea.style.top = \"0\";\r\n    textArea.style.left = \"0\";\r\n    textArea.style.position = \"fixed\";\r\n\r\n    document.body.appendChild(textArea);\r\n    textArea.focus();\r\n    textArea.select();\r\n\r\n    try {\r\n        var successful = document.execCommand('copy');\r\n        var msg = successful ? 'successful' : 'unsuccessful';\r\n        console.log('Fallback: Copying text command was ' + msg);\r\n    } catch (err) {\r\n        console.error('Fallback: Oops, unable to copy', err);\r\n    }\r\n\r\n    document.body.removeChild(textArea);\r\n}\r\nfunction copyTextToClipboard(text: string) {\r\n    if (!navigator.clipboard) {\r\n        fallbackCopyTextToClipboard(text);\r\n        return;\r\n    }\r\n    navigator.clipboard.writeText(text).then(function() {\r\n        console.log('Successfully copied ', text);\r\n    }, function(err) {\r\n        console.error('Could not copy text ', err);\r\n    });\r\n}"],
  "mappings": "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",
  "names": []
}
