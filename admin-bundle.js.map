{
  "version": 3,
  "sources": ["ieeevisdb.ts", "auth.ts", "main-admin.ts"],
  "sourcesContent": ["import {Room, Session} from \"./session\";\n\ndeclare var firebase: Firebase;\n\nexport class IeeeVisDb {\n    private sessionRef?: FirebaseRef;\n    private roomRef?: FirebaseRef;\n\n    constructor() {\n        this.initFirebase();\n    }\n\n    initFirebase() {\n        firebase.initializeApp({\n            apiKey: \"AIzaSyCfFQ-eN52od55QBFZatFImgZgEDHK_P4E\",\n            authDomain: \"ieeevis.firebaseapp.com\",\n            databaseURL: \"https://ieeevis-default-rtdb.firebaseio.com\",\n            projectId: \"ieeevis\",\n            storageBucket: \"ieeevis.appspot.com\",\n            messagingSenderId: \"542997735159\",\n            appId: \"1:542997735159:web:6d9624111ec276a61fd5f2\",\n            measurementId: \"G-SNC8VC6RFM\"\n        });\n        firebase.analytics();\n    }\n\n    loadRoom(roomId: string, onRoomUpdated: (room: Room) => void) {\n        this.roomRef = firebase.database().ref('rooms/' + roomId) as FirebaseRef;\n\n        this.roomRef.on('value', (snapshot) => {\n            onRoomUpdated(snapshot.val() as Room);\n        });\n    }\n\n    loadSession(sessionId: string, onSessionUpdated: (session: Session) => void) {\n        this.sessionRef = firebase.database().ref('sessions/' + sessionId);\n\n        this.sessionRef!.on('value', (snapshot) => {\n            onSessionUpdated(snapshot.val() as Session);\n        });\n    }\n\n    set(path: string, value: string|number|{}) {\n        this.sessionRef?.child(path).set(value);\n    }\n\n    setRoom(path: string, value: string|number) {\n        this.roomRef?.child(path).set(value);\n    }\n}\n\ninterface FirebaseRef {\n    child: (childName: string) => FirebaseRef;\n    set: (value: string|number|{}) => void;\n    on: (event: \"value\", cb: (data: any) => void) => void;\n}\n\ninterface Firebase {\n    initializeApp: (data: {\n        apiKey: string,\n        authDomain: string,\n        databaseURL: string,\n        projectId: string,\n        storageBucket: string,\n        messagingSenderId: string,\n        appId: string,\n        measurementId: string\n    }) => void;\n    analytics: () => void;\n    database: () => {\n        ref: (name: string) => FirebaseRef\n    }\n}", "import {Session} from \"./session\";\n\ndeclare var firebase;\ndeclare var firebaseui;\n\nexport class IeeeVisAuth {\n    constructor() {\n        this.initFirebaseUi();\n    }\n\n    initFirebaseUi() {\n        var uiConfig = {\n            signInSuccessUrl: 'http://localhost:8080/admin',\n            signInOptions: [\n                // Leave the lines as is for the providers you want to offer your users.\n                firebase.auth.GoogleAuthProvider.PROVIDER_ID,\n            ],\n            tosUrl: '',\n            // Privacy policy url/callback.\n            privacyPolicyUrl: ''\n        };\n\n        // Initialize the FirebaseUI Widget using Firebase.\n        var ui = new firebaseui.auth.AuthUI(firebase.auth());\n        // The start method will wait until the DOM is loaded.\n        ui.start('#firebaseui-auth-container', uiConfig);\n    }\n}\n", "import {Room, Session} from \"./session\";\nimport {IeeeVisDb} from \"./ieeevisdb\";\nimport {IeeeVisAuth} from \"./auth\";\n\nclass IeeeVisStreamAdmin {\n    session?: Session;\n    db: IeeeVisDb;\n\n    constructor(private SESSION_ID: string) {\n        this.db = new IeeeVisDb();\n        this.db.loadSession(SESSION_ID, session => this.onSessionUpdated(session));\n\n        new IeeeVisAuth();\n\n        document.getElementById('previous-video-button')!.onclick = this.previousVideo.bind(this);\n        document.getElementById('next-video-button')!.onclick = this.nextVideo.bind(this);\n        document.getElementById('session-to-room-button')!.onclick = this.sessionToRoom.bind(this);\n\n        setInterval(this.updateTable.bind(this), 1000);\n    }\n\n    onSessionUpdated(session: Session) {\n        this.session = session;\n\n        document.getElementById('track-title')!.innerText = this.session.name;\n        document.getElementById('room-id')!.innerText = this.session.room;\n\n        this.db.loadRoom(session.room, room => this.onRoomUpdated(session.room, room));\n    }\n\n    onRoomUpdated(roomId: string, room: Room) {\n        if(roomId != this.session?.room) {\n            // Do not listen to update events of a different room.\n            return;\n        }\n        document.getElementById('room-name')!.innerText = room.name;\n        document.getElementById('room-currentsession')!.innerText = room.currentSession;\n    }\n\n    updateTable() {\n        if(!this.session) {\n            return;\n        }\n\n        const tableBody = document.getElementById('videos-table-body') as HTMLTableElement;\n        tableBody.innerHTML = '';\n\n        const currentVideoPlayedMs = new Date().getTime() - this.session.currentStatus.videoStartTimestamp;\n\n        for(const stageKey in this.session.stages) {\n            const stage = this.session.stages[stageKey];\n            const active = this.session.currentStatus.videoIndex.toString() === stageKey;\n            const isPreview = stage.state === \"PREVIEW\";\n            const timePlayed = !active ? '-' : new Date(currentVideoPlayedMs).toISOString().substr(11, 8);\n            const ytUrl = `https://www.youtube.com/watch?v=${stage.youtubeId}`;\n            const imgUrl = stage.imageUrl;\n\n            const tr = document.createElement('tr');\n            tr.className = active ? 'active' : '';\n            tr.innerHTML = `\n                <td>` +\n                (isPreview ? `<a href=\"${imgUrl}\" target=\"_blank\">[Image]</a>`\n                    : `<a href=${ytUrl}\" target=\"_blank\">${stage.title}</a>`) + `\n                </td>\n                <td>${stage.live ? \"yes\" : \"-\"}</td>\n                <td>${timePlayed}</td>\n                <td>${stage.state}</td>`;\n\n            tableBody.append(tr);\n        }\n    }\n\n    previousVideo() {\n        this.updateVideoIndex(this.session!.currentStatus.videoIndex - 1);\n    }\n\n    nextVideo() {\n        //TODO: don't allow going past the number of vids.\n        this.updateVideoIndex(this.session!.currentStatus.videoIndex + 1);\n    }\n\n    sessionToRoom() {\n        this.db.setRoom('currentSession', this.SESSION_ID);\n    }\n\n    private updateVideoIndex(index: number) {\n        this.db.set('currentStatus', {\n            videoStartTimestamp: new Date().getTime(),\n            videoIndex: index\n        });\n        /*this.db.set('currentStatus/videoStartTimestamp', new Date().getTime());\n        this.db.set('currentStatus/videoIndex', index);*/\n        this.session!.currentStatus.videoStartTimestamp = new Date().getTime();\n        this.session!.currentStatus.videoIndex = index;\n        this.updateTable();\n    }\n}\n\nconst sessionId = location.search.indexOf('session=') === -1 ? '' :\n    location.search.substr(location.search.indexOf('session=') + 'session='.length);\n\nif(sessionId) {\n    const streamAdmin = new IeeeVisStreamAdmin(sessionId);\n    document.getElementById('wrapper')!.style.display = 'block';\n} else {\n    document.getElementById('param-error')!.style.display = 'block';\n}\n"],
  "mappings": "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",
  "names": []
}
